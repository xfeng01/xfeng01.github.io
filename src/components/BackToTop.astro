---

---

<div id="back-to-top-container" class="back-to-top-fixed-container">
  <button 
    id="back-to-top" 
    class="p-3 rounded-full bg-blue-500 text-white shadow-lg transform scale-0 transition-all duration-300 hover:bg-blue-600 focus:outline-none dark:bg-blue-600 dark:hover:bg-blue-700"
    aria-label="Back to top"
  >
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      class="h-6 w-6" 
      fill="none" 
      viewBox="0 0 24 24" 
      stroke="currentColor"
    >
      <path 
        stroke-linecap="round" 
        stroke-linejoin="round" 
        stroke-width="2" 
        d="M5 10l7-7m0 0l7 7m-7-7v18"
      />
    </svg>
  </button>
</div>

<style>
  /* Use !important to ensure styles are not overridden */
  .back-to-top-fixed-container {
    position: fixed !important;
    bottom: 2rem !important; /* Default for desktop */
    right: 2rem !important; /* Default for desktop */
    z-index: 9999 !important; /* Very high z-index to ensure it's on top */
    pointer-events: none; /* Container itself doesn't receive click events */
  }
  
  /* Button needs to receive click events */
  #back-to-top {
    pointer-events: auto;
  }
  
  /* 移动端调整位置，增加间距 */
  @media (max-width: 640px) {
    .back-to-top-fixed-container {
      bottom: 5rem !important; /* 在移动端离底部更远，避免与其他按钮冲突 */
      right: 1rem !important; /* 在移动端靠右更近，节省空间 */
    }
    
    #back-to-top {
      transform: scale(0.85); /* 在移动端稍微缩小按钮大小 */
      padding: 0.5rem !important; /* 更小的内边距 */
    }
  }
  
  @keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
    100% { box-shadow: 0 0 0 0 rgba(59, 130, 246, 0); }
  }

  #back-to-top:hover {
    animation: pulse 1.5s infinite;
  }

  .dark #back-to-top:hover {
    animation: pulse 1.5s infinite;
  }
</style>

<script>
  // Use an immediately invoked function expression to avoid global variable pollution
  (function() {
    document.addEventListener('DOMContentLoaded', () => {
      const backToTopButton = document.getElementById('back-to-top');
      if(!backToTopButton) return;
      
      // Check scroll position
      function checkScroll() {
        if (!backToTopButton) return; // Add null check inside the function
        
        if (window.scrollY > 300) {
          backToTopButton.classList.replace('scale-0', 'scale-100');
        } else {
          backToTopButton.classList.replace('scale-100', 'scale-0');
        }
      }
      
      // Initial check
      checkScroll();
      
      // Use passive: true to improve scroll performance
      window.addEventListener('scroll', () => {
        // Use requestAnimationFrame to prevent too many repaints
        window.requestAnimationFrame(checkScroll);
      }, { passive: true });
      
      // Click the button to return to top
      backToTopButton.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
      
      // Ensure component is initialized only once
      console.log('BackToTop component initialized');
    });
  })();
</script>
