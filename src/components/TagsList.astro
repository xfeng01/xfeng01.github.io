---
import { getCollection } from "astro:content";

// 获取所有文章
const allPosts = await getCollection("posts");
const tagsSet = new Set<string>();

// 收集所有标签
allPosts.forEach((post) => {
  post.data.tags.forEach((tag) => {
    tagsSet.add(tag);
  });
});

// 将 Set 转换为数组并排序（可选）
const allTags = Array.from(tagsSet).sort((a, b) => a.localeCompare(b));

// 定义置顶标签列表
const pinnedTags = ["paper-notes", "重要标签1", "重要标签2"];

// 分离置顶标签和其他标签
const topTags = pinnedTags.filter((tag) => allTags.includes(tag));
const otherTags = allTags.filter((tag) => !pinnedTags.includes(tag));
---

<div class="tags-list bg-white dark:bg-gray-800 shadow-sm rounded-lg p-2 max-md:mt-2">
  <!-- 使用 px-0.5 添加少量左内边距来确保对齐 -->
  <ul class="list-none flex flex-wrap gap-1.5 px-0.5">
    {/* 渲染置顶标签 */}
    {
      topTags.map((tag) => (
        <li>
          <a
            href={`/tags/${tag}`}
            class="inline-flex items-center text-gray-600 dark:text-gray-300 font-semibold py-1 px-2 rounded-md hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 text-sm md:text-base transition-colors"
          >
            #{tag}
            <span class="ml-1 text-yellow-500 dark:text-yellow-400 text-xs">★</span>
          </a>
        </li>
      ))
    }

    {/* 渲染其他标签 */}
    {
      otherTags.map((tag) => (
        <li>
          <a
            href={`/tags/${tag}`}
            class="inline-flex items-center text-gray-600 dark:text-gray-300 font-semibold py-1 px-2 rounded-md hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 text-sm md:text-base transition-colors"
          >
            #{tag}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<style>
  /* 确保标签在移动设备上也更紧凑 */
  @media (max-width: 768px) {
    .tags-list {
      padding: 0.5rem;
    }
    
    .tags-list ul {
      gap: 0.5rem;
      justify-content: flex-start;
    }
  }
  
  /* 确保第一个标签与页面内容对齐 */
  .tags-list ul {
    margin: 0;
    padding-inline-start: 0;
  }
  
  .tags-list li {
    margin: 0;
  }
</style>
