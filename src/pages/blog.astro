---
import { getCollection } from "astro:content";
import { blog } from "../consts";
import MainLayout from "../layouts/MainLayout.astro";
import PostCard from "../components/PostCard.astro";
import TagsList from "../components/TagsList.astro"; // 引入标签组件

const allPosts = await getCollection("posts");

const sortedPosts = allPosts.sort(
  (a, b) => b.data.published.getTime() - a.data.published.getTime()
);

// 只获取第一页的文章
const firstPagePosts = sortedPosts.slice(0, blog.postsPerPage);

// 计算总页数
const totalPages = Math.ceil(sortedPosts.length / blog.postsPerPage);
---

<MainLayout>
  <div class="flex flex-col justify-between items-start mb-6">
    <div class="w-full mb-4">
      <TagsList />
    </div>
    <!-- 搜索框 - 修改为全宽 -->
    <div class="search-container w-full">
      <input 
        type="text" 
        id="searchInput"
        placeholder="Search..." 
        class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500"
      />
    </div>
  </div>

  <ul id="postsContainer">
    {
      firstPagePosts.map((post) => (
        <PostCard
          title={post.data.title}
          date={post.data.published.toLocaleDateString("default").slice(0, 10)}
          description={post.data.description}
          url={`/posts/${post.id}/`}
        />
      ))
    }
  </ul>

  <!-- 无结果时显示 -->
  <div id="noResults" class="hidden text-center py-6 text-gray-500 dark:text-gray-400">
    No posts found matching your search.
  </div>

  <!-- 添加美化后的分页控件 -->
  {totalPages > 1 && (
    <div class="flex justify-center mt-10">
      <div class="inline-flex items-center rounded-md overflow-hidden shadow-sm">
        {/* 页码按钮组 */}
        {[...Array(totalPages)].map((_, i) => (
          <a
            href={i === 0 ? "/blog" : `/blog/${i + 1}`}
            class={`relative inline-flex items-center px-4 py-2 text-sm font-medium transition-colors 
              ${i === 0 
                ? "bg-blue-600 text-white hover:bg-blue-700" 
                : "bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 border-l border-gray-200 dark:border-gray-700"
              }`}
            aria-current={i === 0 ? "page" : undefined}
          >
            {i + 1}
          </a>
        ))}
        
        {/* 下一页按钮 */}
        {totalPages > 1 && (
          <a
            href="/blog/2"
            class="relative inline-flex items-center px-4 py-2 text-sm font-medium bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 border-l border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 group transition-colors"
          >
            <span>Next</span>
            <svg class="w-4 h-4 ml-1.5 group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        )}
      </div>
    </div>
  )}
</MainLayout>

<script>
  // 等待DOM加载完成
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('searchInput');
    const postsContainer = document.getElementById('postsContainer');
    const noResults = document.getElementById('noResults');
    
    // 添加空值检查
    if (!searchInput || !postsContainer || !noResults) return;
    
    const allPostItems = Array.from(postsContainer.children);

    // 处理搜索功能
    searchInput.addEventListener('input', () => {
      const searchTerm = (searchInput as HTMLInputElement).value.toLowerCase().trim();
      let hasResults = false;

      allPostItems.forEach(post => {
        // 添加空值检查
        const titleElement = post.querySelector('h2');
        if (!titleElement) return;
        
        const title = titleElement.textContent?.toLowerCase() || '';
        const matches = title.includes(searchTerm);
        
        post.classList.toggle('hidden', !matches);
        
        if (matches) {
          hasResults = true;
        }
      });

      // 显示或隐藏无结果消息
      noResults.classList.toggle('hidden', hasResults);
    });
  });
</script>
