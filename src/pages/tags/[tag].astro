---
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import PostCard from "../../components/PostCard.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const tags = new Set();
  allPosts.forEach((post) => {
    post.data.tags.forEach((tag) => {
      tags.add(tag);
    });
  });
  return Array.from(tags).map((tag) => ({
    params: { tag },
  }));
}

const { tag } = Astro.params as { tag: string }; // 获取动态路由参数并指定类型
const allPosts = await getCollection("posts");
const sortedPosts = allPosts.sort(
  (a, b) => b.data.published.getTime() - a.data.published.getTime()
);

// 根据标签过滤文章
const filteredPosts = sortedPosts.filter(post => post.data.tags.includes(tag));
---

<MainLayout>
  <div class="px-4 sm:px-6 md:px-0">
    <!-- 返回博客按钮 -->
    <div class="mb-6 mt-4">
      <a href="/blog" class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to Blog
      </a>
    </div>
  
    <h1 class="text-2xl font-bold text-center text-gray-800 dark:text-gray-100 mb-6">{tag}</h1>
    <ul class="p-0 m-0 space-y-4">
      {filteredPosts.length > 0 ? (
        filteredPosts.map((post) => (
          <PostCard
            title={post.data.title}
            date={post.data.published.toLocaleDateString("default").slice(0, 10)}
            description={post.data.description}
            url={`/posts/${post.id}/`}
          />
        ))
      ) : (
        <li class="text-center py-10 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
          <p class="text-gray-500 dark:text-gray-400">No posts found with this tag</p>
        </li>
      )}
    </ul>
  </div>
</MainLayout>
